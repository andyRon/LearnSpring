<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 注册bean -->
    <bean id="userService" class="com.andyron.service.UserServiceImpl"/>
    <bean id="log" class="com.andyron.log.Log"/>
    <bean id="afterLog" class="com.andyron.log.AfterLog"/>

    <!-- 方式一：使用原生Spring API接口 -->
    <!-- 配置aop：需要导入aop的约束 -->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 切入点，expression：表达式 &ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.andyron.service.UserServiceImpl.*(..))"/>-->

<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

    <!-- 方式二：自定义类 -->
<!--    <bean id="diy" class="com.andyron.diy.DiyPointcut"/>-->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 自定义切面，ref要引用类 &ndash;&gt;-->
<!--        <aop:aspect  ref="diy">-->
<!--            &lt;!&ndash; 切入点 &ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.andyron.service.UserServiceImpl.*(..))"/>-->
<!--            &lt;!&ndash; 通知 &ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!-- 方式三：使用注解实现AOP！ -->
    <bean id="annotationPointcut" class="com.andyron.diy.AnnotationPointcut"/>
    <!-- 开启注解支持
         参数proxy-target-class默认是false，代表使用JDK实现动态代理；true代表使用cglib。
    -->
    <aop:aspectj-autoproxy />

</beans>